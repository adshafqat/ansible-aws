---
- name: Ansible Playbook to Stop AWS Servers
  gather_facts: false
  hosts: localhost
  connection: local
  vars_files: "vars/vars.yml"

  
  tasks:
    - name: Execute Terraform Plan file
      terraform:
        project_path: "{{ project_path }}"
        plan_file: “{{ plan_file }}”
        lock: true
        state: planned
      register: plan_outputs

#     Purpose of this task is to start aws instances if they are already created and stoped. 
#     For the first when there is no server, this task will fail. That's why ignore_errors = yes
#     For this task to run ansible-galaxy collection install amazon.aws and pip3 install boto should be installed on ansible controller
    - name: Stop aws instances 
      amazon.aws.ec2:
          instance_ids:  
            - '{{ plan_outputs.outputs.masterinstanceid.value }}'
            - '{{ plan_outputs.outputs.infrainstanceid.value }}'
            - '{{ plan_outputs.outputs.workerinstanceid.value }}'
          region: '{{ aws_region }}'
          state: stopped
          wait: True
          assign_public_ip: yes
      ignore_errors: yes
